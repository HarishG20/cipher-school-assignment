#include <iostream>
using namespace std;

class PriorityQueue {
private:
    int arr[100];
    int size;

public:
    PriorityQueue() {
        size = 0;
    }

    void enqueue(int value) {
        if (size == 100) {
            cout << "Queue Overflow" << endl;
            return;
        }
        arr[size] = value;
        size++;
    }

    int dequeue() {
        if (size == 0) {
            cout << "Queue Underflow" << endl;
            return -1;
        }
        int maxIndex = 0;
        for (int i = 1; i < size; i++) {
            if (arr[i] > arr[maxIndex]) {
                maxIndex = i;
            }
        }
        int maxValue = arr[maxIndex];
        for (int i = maxIndex; i < size - 1; i++) {
            arr[i] = arr[i + 1];
        }
        size--;
        return maxValue;
    }

    void display() {
        if (size == 0) {
            cout << "Queue is empty" << endl;
            return;
        }
        for (int i = 0; i < size; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }

    bool isEmpty() {
        return size == 0;
    }
};

int main() {
    PriorityQueue pq;
    pq.enqueue(10);
    pq.enqueue(30);
    pq.enqueue(20);
    pq.enqueue(50);
    pq.enqueue(40);
    cout << "Priority Queue: ";
    pq.display();
    cout << "Dequeue (highest priority): " << pq.dequeue() << endl;
    cout << "Priority Queue after dequeue: ";
    pq.display();
    return 0;
}
