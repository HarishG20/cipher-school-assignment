#include <iostream>
#include <stack>
using namespace std;
int precedence(char op) {
    if (op == '+' || op == '-') return 1;
    if (op == '*' || op == '/') return 2;
    if (op == '^') return 3;
    return 0;
}
string infixToPostfix(string str) {
    stack<char> s;
    string result;
    for (int i = 0; i < str.length(); i++) {
        char c = str[i];
        if (isalnum(c)) {
            result += c;
        } else if (c == '(') {
            s.push(c);
        } else if (c == ')') {
            while (!s.empty() && s.top() != '(') {
                result += s.top();
                s.pop();
            }
            s.pop();
        } else {
            while (!s.empty() && precedence(s.top()) >= precedence(c)) {
                result += s.top();
                s.pop();
            }
            s.push(c);
        }
    }
    while (!s.empty()) {
        result += s.top();
        s.pop();
    }
    return result;
}
int main() {
    string str;
    cout << "Enter the infix expression: ";
    cin >> str;
    string postfix = infixToPostfix(str);
    cout << "Postfix expression: " << postfix << end;
}
